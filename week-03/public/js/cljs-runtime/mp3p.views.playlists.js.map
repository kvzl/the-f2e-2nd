{"version":3,"sources":["mp3p/views/playlists.cljs"],"mappings":";;;;;AAOA,AAAA,AAAWC;AAAX,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAA;;AAcA,AAAA,AAAME;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AACmB,AAACD;;AAKpB,AAAA,AAAWE;AAAX,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACU,AAAA,AAAOI;;AASjB,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACgB,AAACF,AAEd,AAACD;;AAMJ,AAAA,AAAWI;AAAX,AAAA,AAAAN,AAAA,AAAA,AAAA,AAAA;;AAIA,AAAA,AAAMO;AAAN,AAAA,AAAA,AAAA,AAAA,AACgB,AAACD;;AAMjB,AAAA,AAAWE;AAAX,AAAA,AAAAR,AAAA,AAAA,AAAA,AAAA;;AAMA,AAAA,AAAWS;AAAX,AAAA,AAAAT,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEU,AAAA,AAAOI;;AAKjB,AAAA,AAAWM,AAAQC;AAAnB,AAAA,AAAAX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKU,AAAA,AAAIW,AAAO,AAAA,AAAQP,AAKT,AAAA,AAAOA,AASK,AAAA,AAAIO,AAAO,AAAA,AAAA,AAAA,AAAgC,AAAA,AAAYP,AAAgB,AAAA,AAAUA,AACjF,AAAA,AAAA,AAAIO;;AAOpC,AAAA,AAAMC,AAAWC;AAAjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACgB,AAACL,AACd,AAACH,AACa,AAACI,AACd,AAACK,AACA,AAAKC,AAAMC;AAAX,AACE,AACMC,AAAK,AAAA,AAAOD;AADlB,AAAA,AAAA,AAAA,AAAA,AAEgB,AAACN,AAAO,AAAA,AAACQ,AAAEH,AAAWE;AACxCJ,AACF,AAACN","names":["cljss.core/css","mp3p.views.playlists/add-button","mp3p.views.playlists/AddButton","mp3p.views.playlists/header","mp3p.views.colors/colors","mp3p.views.playlists/PlaylistsHeader","mp3p.views.playlists/now-playing","mp3p.views.playlists/NowPlaying","mp3p.views.playlists/wrap","mp3p.views.playlists/p-lists","mp3p.views.playlists/p-list","active","mp3p.views.playlists/Playlists","playlists","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","index","playlist","name","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns mp3p.views.playlists\n  (:require [sablono.core :refer [html]]\n            [cljss.core :refer-macros [defstyles]]\n            [mp3p.views.colors :refer [colors]]))\n\n; Add button\n\n(defstyles add-button []\n  {:background-image \"url('imgs/plus-solid.png')\"\n   :background-color \"transparent\"\n   :background-repeat \"no-repeat\"\n   :background-position \"center\"\n   :background-size \"40%\"\n   :border \"none\"\n   :width \"30px\"\n   :height \"30px\"\n   :cursor \"pointer\"\n\n   :&:hover {:background-image \"url('imgs/plus-solid_hover.png')\"}})\n\n\n(defn AddButton []\n  [:button {:class (add-button)} \"\"])\n\n\n; Playlists Header\n\n(defstyles header []\n  {:color (:gray colors)\n   :font-size \"16px\"\n   :height \"73px\"\n   :padding \"0px 25px\"\n   :display \"flex\"\n   :justify-content \"space-between\"\n   :align-items \"center\"})\n\n\n(defn PlaylistsHeader []\n  [:div {:class (header)}\n   [:span \"\u6211\u7684\u5c08\u8f2f\"]\n   (AddButton)])\n\n\n; Now Playing\n\n\n(defstyles now-playing []\n  {})\n\n\n(defn NowPlaying []\n  [:div {:class (now-playing)}])\n\n\n; Playlists\n\n\n(defstyles wrap []\n  {:display \"flex\"\n   :flex-direction \"column\"\n   :height \"100%\"})\n\n\n(defstyles p-lists []\n  {:background-image \"linear-gradient(180deg, #222222 23%, #0C0C0C 100%)\"\n   :color (:gray colors)\n   :width \"100%\"\n   :flex-grow 1})\n\n\n(defstyles p-list [active]\n  {:padding \"0px 26px\"\n   :height \"50px\"\n   :display \"flex\"\n   :align-items \"center\"\n   :color (if active (:light colors))\n   :position \"relative\"\n   :cursor \"pointer\"\n   :transition \"all .15s ease-in\"\n\n   :&:hover {:color (:link colors)\n             &:before {:background-color \"rgba(100, 100, 100, .9)\"}}\n\n   :&:before {:content \"\"\n              :display \"block\"\n              :position \"absolute\"\n              :left \"0px\"\n              :top \"0px\"\n              :transition \"all .15s ease-in\"\n              :background-image (if active (str \"linear-gradient(270deg, \" (:highlight colors) \" 0%, \" (:primary colors) \" 100%)\"))\n              :background-color (if active \"rgba(42, 42, 42, .9)\")\n              :opacity 0.1\n              :z-index 1\n              :width \"100%\"\n              :height \"100%\"}})\n\n\n(defn Playlists [playlists]\n  [:div {:class (wrap)}\n   (PlaylistsHeader)\n   [:div {:class (p-lists)}\n    (map-indexed\n     (fn [index playlist]\n       ^{:key (str \"playlist-\" index)}\n       (let [name (:name playlist)]\n         [:div {:class (p-list (= index 1))} name]))\n     playlists)]\n   (NowPlaying)])\n\n\n"]}